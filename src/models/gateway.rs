/*
 * The Span API
 *
 * API for device, collection, output and firmware management
 *
 * The version of the OpenAPI document: 4.3.0 grouchy-aloysius
 * Contact: dev@lab5e.com
 * Generated by: https://openapi-generator.tech
 */

/// Gateway : A gateway is a connection between devices and Span



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Gateway {
    #[serde(rename = "gatewayId", skip_serializing_if = "Option::is_none")]
    pub gateway_id: Option<String>,
    #[serde(rename = "collectionId", skip_serializing_if = "Option::is_none")]
    pub collection_id: Option<String>,
    #[serde(rename = "networkId", skip_serializing_if = "Option::is_none")]
    pub network_id: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<::std::collections::HashMap<String, String>>,
}

impl Gateway {
    /// A gateway is a connection between devices and Span
    pub fn new() -> Gateway {
        Gateway {
            gateway_id: None,
            collection_id: None,
            network_id: None,
            tags: None,
        }
    }
}


