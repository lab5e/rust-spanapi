/*
 * The Span API
 *
 * API for device, collection, output and firmware management
 *
 * The version of the OpenAPI document: 4.8.0 indecipherable-ferman
 * Contact: dev@lab5e.com
 * Generated by: https://openapi-generator.tech
 */

/// CreateDeviceRequest : Request object to create new devices

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateDeviceRequest {
    /// Tags are metadata for the device that you can set. These are just strings.
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "firmware", skip_serializing_if = "Option::is_none")]
    pub firmware: Option<Box<crate::models::FirmwareMetadata>>,
    #[serde(rename = "config", skip_serializing_if = "Option::is_none")]
    pub config: Option<Box<crate::models::DeviceConfig>>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Box<crate::models::DeviceMetadata>>,
}

impl CreateDeviceRequest {
    /// Request object to create new devices
    pub fn new() -> CreateDeviceRequest {
        CreateDeviceRequest {
            tags: None,
            firmware: None,
            config: None,
            metadata: None,
        }
    }
}
